//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 View_View_ViewTilePosition; // Offset: 1024 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1216 Size:    12
//   row_major float4x4 View_View_PrevTranslatedWorldToClip;// Offset: 1360 Size:    64
//   float3 View_View_RelativePrevPreViewTranslation;// Offset: 1728 Size:    12
//   uint View_View_InstanceSceneDataSOAStride;// Offset: 4528 Size:     4
//
// }
//
// cbuffer LocalVF
// {
//
//   int4 LocalVF_LocalVF_VertexFetch_Parameters;// Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_InstanceSceneData            texture    byte         r/o             t1      1 
// View_InstancePayloadData          texture    byte         r/o             t2      1 
// InstanceCulling_InstanceIdsBuffer    texture    byte         r/o             t3      1 
// LocalVF_VertexFetch_TexCoordBuffer    texture  float4         buf             t4      1 
// LocalVF_VertexFetch_PackedTangentsBuffer    texture  float4         buf             t5      1 
// View                              cbuffer      NA          NA            cb0      1 
// LocalVF                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE               13   x           1     NONE    uint   x   
// SV_VertexID              0   x           2   VERTID    uint   x   
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// PRIMITIVE_ID             0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[284], immediateIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_raw t2
dcl_resource_raw t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_input v0.xyz
dcl_input v1.x
dcl_input_sgv v2.x, vertex_id
dcl_input_sgv v3.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_temps 16
and [precise(xy)] r0.xy, v1.xxxx, l(0x80000000, 0x7fffffff, 0, 0)
imul [precise(y)] null, r0.y, r0.y, l(42)
bfi [precise(y)] r0.y, l(28), l(4), r0.y, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
iadd [precise(y)] r0.y, r0.y, v3.x
iadd [precise(z)] r0.z, v1.x, v3.x
ishl [precise(z)] r0.z, r0.z, l(2)
ld_raw_indexable [precise(z)](raw_buffer)(mixed,mixed,mixed,mixed) r0.z, r0.z, t3.xxxx
and [precise(z)] r0.z, r0.z, l(0x0fffffff)
movc [precise(x)] r0.x, r0.x, r0.y, r0.z
ishl [precise(y)] r0.y, r0.x, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t1.xxxx
and [precise(z)] r0.z, r0.y, l(0x000fffff)
ine [precise(w)] r0.w, r0.z, l(0x000fffff)
if_nz r0.w
  ushr [precise(w)] r0.w, r0.y, l(20)
  bfi [precise(y)] r1.xy, l(28, 20, 0, 0), l(4, 2, 0, 0), r0.xyxx, l(4, 0, 0, 0)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.x, r1.x, t1.xxxx
  and r1.x, r1.x, l(0x00ffffff)
  imad r1.zw, r1.yyyy, l(0, 0, 168, 168), l(0, 0, 448, 432)
  or r1.zw, r1.zzzw, l(0, 0, 12, 28)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.z, r1.z, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.w, r1.w, t0.xxxx
  imad r1.x, r1.x, r1.z, r1.w
  and [precise(yz)] r2.xyz, r0.wwww, l(8, 64, 160, 0)
  movc [precise(w)] r0.w, r2.z, l(1), l(0)
  movc [precise(w)] r0.w, r2.y, l(2), r0.w
  iadd r0.w, r0.w, r1.x
  movc r0.w, r2.x, r0.w, l(-1)
  iadd [precise(x)] r1.x, r0.x, cb0[283].x
  ishl [precise(x)] r1.x, r1.x, l(4)
  ld_raw_indexable [precise](raw_buffer)(mixed,mixed,mixed,mixed) r2.xyzw, r1.x, t1.zxwy
  ishl [precise(x)] r1.xz, cb0[283].xxxx, l(1, 0, 2, 0)
  iadd [precise(x)] r1.xz, r0.xxxx, r1.xxzx
  ishl [precise(x)] r1.xz, r1.xxzx, l(4, 0, 4, 0)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r3.xyz, r1.x, t1.xyzx
  and [precise(xyz)] r4.xyz, r2.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
  utof [precise(xy)] r5.xy, r4.xyxx
  ushr [precise(xyw)] r4.xyw, r2.yxyz, l(16, 16, 0, 16)
  utof [precise(z)] r5.z, r4.x
  add [precise(xyz)] r5.xyz, r5.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
  mul [precise(xyz)] r5.xyz, r5.xyzx, l(0.000031, 0.000031, 0.000043, 0.000000)
  add [precise(x)] r6.x, r5.y, r5.x
  add [precise(y)] r6.y, -r5.y, r5.x
  dp2 [precise(x)] r1.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r6.xyxx|
  add [precise(z)] r6.z, -r1.x, l(2.000000)
  dp3 [precise(x)] r1.x, r6.xyzx, r6.xyzx
  rsq [precise(x)] r1.x, r1.x
  mul [precise(xyw)] r5.xyw, r1.xxxx, r6.xyxz
  add [precise(x)] r1.x, r5.w, l(1.000000)
  div [precise(x)] r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  mov [precise(xy)] r6.xy, -r5.xyxx
  mul [precise(w)] r1.w, r5.y, r6.x
  mul [precise(z)] r7.z, r1.x, r1.w
  mul [precise(w)] r1.w, r5.z, r5.z
  add [precise(w)] r1.w, -r1.w, l(1.000000)
  sqrt [precise(w)] r1.w, r1.w
  mul [precise(xy)] r8.xy, r5.xyxx, r5.xyxx
  mul [precise(xy)] r8.xy, r1.xxxx, r8.xyxx
  add [precise(xy)] r7.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  swapc [precise(x)] r1.x, r4.x, r4.z, r5.z, r1.w
  mov [precise(w)] r7.w, r6.x
  mul [precise(xyz)] r8.xyz, r4.xxxx, r7.xzwx
  mov [precise(zw)] r6.zw, r7.zzzy
  mul [precise(xyz)] r6.xyz, r1.xxxx, r6.zwyz
  add [precise(xyz)] r6.xyz, r6.xyzx, r8.xyzx
  mul [precise(xyz)] r7.xyz, r5.ywxy, r6.zxyz
  mul [precise(xyz)] r8.xyz, r5.wxyw, r6.yzxy
  add [precise(xyz)] r7.xyz, r7.xyzx, -r8.xyzx
  mov [precise(y)] r2.y, r4.y
  and [precise(xyz)] r2.xyz, r2.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof [precise(xyz)] r2.xyz, r2.xyzx
  add [precise(xyz)] r2.xyz, r2.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
  ishl [precise(x)] r1.x, r4.w, l(23)
  iadd [precise(x)] r1.x, r1.x, l(0xf8800000)
  mul [precise(xyz)] r2.xyz, r1.xxxx, r2.xyzx
  mul [precise(xyz)] r4.xyz, r2.xxxx, r6.xyzx
  mul [precise(xyz)] r6.xyz, r2.yyyy, r7.xyzx
  mul [precise(xyz)] r5.xyz, r2.zzzz, r5.xywx
  imad r0.x, l(3), cb0[283].x, r0.x
  ishl r0.x, r0.x, l(4)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r7.xyzw, r0.x, t1.zxwy
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xzw, r1.z, t1.xxyz
  and r8.xyz, r7.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
  utof r9.xy, r8.xyxx
  ushr r8.xyw, r7.yxyz, l(16, 16, 0, 16)
  utof r9.z, r8.x
  add r9.xyz, r9.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
  mul r9.yzw, r9.xxyz, l(0.000000, 0.000031, 0.000031, 0.000043)
  add r10.x, r9.z, r9.y
  mad r10.y, r9.x, l(0.000031), -r9.z
  dp2 r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r10.xyxx|
  add r10.z, -r0.x, l(2.000000)
  dp3 r0.x, r10.xyzx, r10.xyzx
  rsq r0.x, r0.x
  mul r9.xyz, r0.xxxx, r10.xyzx
  mad r0.x, r10.z, r0.x, l(1.000000)
  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mov r10.xy, -r9.xyxx
  mul r2.w, r9.y, r10.x
  mul r11.z, r0.x, r2.w
  mad r2.w, -r9.w, r9.w, l(1.000000)
  sqrt r2.w, r2.w
  mul r12.xy, r9.xyxx, r9.xyxx
  mad r11.xy, -r12.xyxx, r0.xxxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  swapc r0.x, r8.x, r8.z, r9.w, r2.w
  mov r11.w, r10.x
  mov r10.zw, r11.zzzy
  mul r10.xyz, r0.xxxx, r10.zwyz
  mad r10.xyz, r11.xzwx, r8.xxxx, r10.xyzx
  mul r11.xyz, r9.zxyz, r10.yzxy
  mad r11.xyz, r9.yzxy, r10.zxyz, -r11.xyzx
  mov r7.y, r8.y
  and r7.xyz, r7.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof r7.xyz, r7.xyzx
  add r7.xyz, r7.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
  ishl r0.x, r8.w, l(23)
  iadd r0.x, r0.x, l(0xf8800000)
  mul r7.xyz, r0.xxxx, r7.xyzx
  mul r8.xyz, r7.xxxx, r10.xyzx
  mul r7.xyw, r7.yyyy, r11.xyxz
  mul r9.xyz, r7.zzzz, r9.xyzx
  ine r0.x, r0.w, l(-1)
  if_nz r0.x
    ishl r0.x, r0.w, l(4)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.xyzw, r0.x, t2.zxwy
    iadd r0.x, r0.x, l(16)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xzw, r0.x, t2.xxyz
    and r11.xyz, r10.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
    utof r12.xy, r11.xyxx
    ushr r11.xyw, r10.yxyz, l(16, 16, 0, 16)
    utof r12.z, r11.x
    add r12.xyz, r12.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
    mul r12.yzw, r12.xxyz, l(0.000000, 0.000031, 0.000031, 0.000043)
    add r13.x, r12.z, r12.y
    mad r13.y, r12.x, l(0.000031), -r12.z
    dp2 r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r13.xyxx|
    add r13.z, -r0.x, l(2.000000)
    dp3 r0.x, r13.xyzx, r13.xyzx
    rsq r0.x, r0.x
    mul r12.xyz, r0.xxxx, r13.xyzx
    mad r0.x, r13.z, r0.x, l(1.000000)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    mov r13.xy, -r12.xyxx
    mul r0.w, r12.y, r13.x
    mul r14.z, r0.x, r0.w
    mad r0.w, -r12.w, r12.w, l(1.000000)
    sqrt r0.w, r0.w
    mul r15.xy, r12.xyxx, r12.xyxx
    mad r14.xy, -r15.xyxx, r0.xxxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    swapc r0.x, r11.x, r11.z, r12.w, r0.w
    mov r14.w, r13.x
    mov r13.zw, r14.zzzy
    mul r13.xyz, r0.xxxx, r13.zwyz
    mad r13.xyz, r14.xzwx, r11.xxxx, r13.xyzx
    mul r14.xyz, r12.zxyz, r13.yzxy
    mad r14.xyz, r12.yzxy, r13.zxyz, -r14.xyzx
    mov r10.y, r11.y
    and r10.xyz, r10.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
    utof r10.xyz, r10.xyzx
    add r10.xyz, r10.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
    ishl r0.x, r11.w, l(23)
    iadd r0.x, r0.x, l(0xf8800000)
    mul r10.xyz, r0.xxxx, r10.xyzx
    mul r8.xyz, r10.xxxx, r13.xyzx
    mul r7.xyw, r10.yyyy, r14.xyxz
    mul r9.xyz, r10.zzzz, r12.xyzx
  endif 
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), |r2.xyzx|
  imad [precise(x)] r0.x, r1.y, l(168), l(16)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r10.xyz, r0.x, t0.xyzx
  ubfe r0.x, l(1), l(20), r0.y
  movc r0.x, r0.x, l(-1.000000), l(1.000000)
else 
  mov [precise(xyz)] r4.xyz, l(0,0,0,0)
  mov [precise(xyz)] r6.xyz, l(0,0,0,0)
  mov [precise(xyz)] r5.xyz, l(0,0,0,0)
  mov [precise(xyz)] r3.xyz, l(0,0,0,0)
  mov [precise(xyz)] r10.xyz, l(0,0,0,0)
  mov r8.xyz, l(0,0,0,0)
  mov r7.xyw, l(0,0,0,0)
  mov r9.xyz, l(0,0,0,0)
  mov r1.xzw, l(0,0,0,0)
  mov r2.xyz, l(0,0,0,0)
  mov r0.x, l(0)
endif 
iadd r0.w, v2.x, cb1[0].w
ishl r1.y, r0.w, l(1)
bfi r2.w, l(31), l(1), r0.w, l(1)
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r2.wwww, t5.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyz, r1.yyyy, t5.xyzw
mul r13.xyz, r11.yzxy, r12.xyzx
mad r12.xyz, r11.xyzx, r12.yzxy, -r13.xyzx
mul r12.xyz, r11.wwww, r12.xyzx
mul r13.xyz, r11.yzxy, r12.xyzx
mad r12.xyz, r12.zxyz, r11.zxyz, -r13.xyzx
mul r12.xyz, r11.wwww, r12.xyzx
mul r13.xyz, r2.xxxx, r4.xyzx
mul r2.xyw, r2.yyyy, r6.xyxz
mul r14.xyz, r2.zzzz, r5.xyzx
mul r15.xyz, r2.xywx, r12.yyyy
mad r12.xyw, r12.xxxx, r13.xyxz, r15.xyxz
mad o0.xyz, r12.zzzz, r14.xyzx, r12.xywx
mul r2.xyz, r2.xywx, r11.yyyy
mad r2.xyz, r11.xxxx, r13.xyzx, r2.xyzx
mad o1.xyz, r11.zzzz, r14.xyzx, r2.xyzx
mul [precise(xyz)] r2.xyz, r4.xyzx, v0.xxxx
mul [precise(xyz)] r4.xyz, r6.xyzx, v0.yyyy
add [precise(xyz)] r2.xyz, r2.xyzx, r4.xyzx
mul [precise(xyz)] r4.xyz, r5.xyzx, v0.zzzz
add [precise(xyz)] r2.xyz, r2.xyzx, r4.xyzx
add [precise(xyz)] r4.xyz, r10.xyzx, -cb0[64].xyzx
add [precise(xyz)] r3.xyz, r3.xyzx, cb0[76].xyzx
mul [precise(xyz)] r5.xyz, r4.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r3.xyz, r3.xyzx, r5.xyzx
add [precise(xyz)] r2.xyz, r2.xyzx, r3.xyzx
iadd r1.y, l(-1), cb1[0].y
imul null, r2.w, r0.w, cb1[0].y
ld_indexable(buffer)(float,float,float,float) r3.xy, r2.wwww, t4.xyzw
umin r5.xyz, r1.yyyy, l(1, 2, 3, 0)
imad r5.xyz, cb1[0].yyyy, r0.wwww, r5.xyzx
ld_indexable(buffer)(float,float,float,float) r3.zw, r5.xxxx, t4.zwxy
ld_indexable(buffer)(float,float,float,float) r5.xy, r5.yyyy, t4.xyzw
ld_indexable(buffer)(float,float,float,float) r5.zw, r5.zzzz, t4.zwxy
mul [precise] r6.xyzw, r2.xxxx, cb0[0].xyzw
mul [precise] r10.xyzw, r2.yyyy, cb0[1].xyzw
add [precise] r6.xyzw, r6.xyzw, r10.xyzw
mul [precise] r2.xyzw, r2.zzzz, cb0[2].xyzw
add [precise] r2.xyzw, r2.xyzw, r6.xyzw
add [precise] o6.xyzw, r2.xyzw, cb0[3].xyzw
bfi r0.y, l(20), l(2), r0.y, l(0)
imul null, r0.y, r0.y, l(168)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
and r0.y, r0.y, l(32)
mul r2.xyz, r7.xywx, v0.yyyy
mad r2.xyz, v0.xxxx, r8.xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, r9.xyzx, r2.xyzx
add r1.xyz, r1.xzwx, cb0[108].xyzx
mad r1.xyz, r4.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyzw, r1.yyyy, cb0[86].xyzw
mad r2.xyzw, r1.xxxx, cb0[85].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb0[87].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[88].xyzw
movc o5.xyzw, r0.yyyy, r1.xyzw, l(0,0,0,1.000000)
mul o1.w, r0.x, r11.w
mov o0.w, l(0)
mov o2.xyzw, r3.xyzw
mov o3.xyzw, r5.xyzw
mov [precise(x)] o4.x, r0.z
ret 
// Approximately 251 instruction slots used
